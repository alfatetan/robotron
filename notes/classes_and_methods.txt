Классы и методы Robotron

Класс: Asterisk()
Назначение: Работа с Asterisk

Методы:
	get_variable(variable) - получить значение переменной Asterisk
	set_variable(variable, value) - назначить значение в переменную
	hungup() - прекращение разговора
	
Свойства:
	scheme - Название схемы разговора
	speech_block - Текущий блок разговора
	skip - Флаг пропуска выслушивания абонента
	voicefile - Имя файла записанного голоса абонента
	waitvoice - Время ожидания голоса абонента (миллисекунды), если 0 - ждать вечно, пока в абонент не издаст какие-либо звуки.
	sayfile - Имя файла голоса, который необходимо произнести Роботрону
	abntnum - Номер абонента, которому мы звоним
	typering - in/out направление звонка (in - входящий, out - исходящий)

**************************************************
Класс: AgiDebug([файл_протокола])
Назначение: Работа с протоколом отладки

Методы:
	upd(value) - записывает в протокол значение

**************************************************
Класс: CallFiles(phones, [scheme], [startblock]) (callto.py утилита)
Назначение: Совершает звонки, формируя и перенося .call файлы

Методы:
	phone_append(phone) - добавить в список номер телефона
	change_scheme(scheme) - назначить путь до схемы диалога
	change_startblock(startblock_name) - назначить стартовый блок для схемы диалога
	create_call_file(phone) - создать отдельный файл для отдельного номера
	create_call_files() - создать .call файлы согласно списку номеров
	start_calls() - запуск звонков (даже если файлы не были созданы)

**************************************************
Класс: SpeechKit(<folder_id Яндекс Облака>) - 
Назначение: Взаимодействие с Yandex Speech Kit, служащий для переработки звука в текст
Замечания: для работы необходимый файл iam.token, который содержит iam ключ

Методы:
	recognize(filename) - распознаёт файл filename и возвращает текст
	get_result() - возвращает результат распознания

**************************************************
Класс: SpeechBlock(<filename.trgs>, [scheme], [path])
Назначение: Работает с блоком речи (trgs файлом)
Зачемания: необходимо указывать корректное имя файла блока речи (не обязательно с расширением .trgs)

Методы:
	analysis(text) - возвращает адрес следующего блока
	check_skip() - проверяет существует ли в триггерах безусловных переход в другой блок. Если да, то выслушивание абонента не будет
	get_audio(value) - возвращает словарь {audiofile: audiotext}

Свойства:
	next_audiofile - название аудиофайла
	next_audiotext - текст аудио
	next_block - содержит имя следующего блока после вызова метода analysis(text)

**************************************************
Класс: TalkRecord(<phone_number>)
Замечание: filename должно быть создано с переменной abntnmb, то есть просто номер телефона
Назначение: Работает с текстовым протоколом разговора.

Методы:
	save_talk(string, blockname) - запись сказанного абонентом в протокол, если blockname не задан, то запись происходит от лица абонента

Свойства:
	history - список, хранящий в себе историю блоков

**************************************************
Класс: FreeChannels(max_channels=3)
Назначение: проверяет количество свободных каналов. Количество свободных каналов по умолчанию 3, но можно изменить значением при создании экземпляра класса. Основное предназначение класса - вспомогательный инструмент для того, чтобы не перегружать коммуникационную линию Asterisk.

Методы:
	check() - возвращает количество свободных каналов

**************************************************
Класс: Synthesis(folder_id,  lang='ru_RU')
Методы:
	say(filename, text, who='oksana', attitude='neutral') - общая форма формирования звукового файла голоса, где filename - это имя формируемого файла, который возвращается в виде lpcm формате без заголовка (raw формат потоковых данных); text - это сам текст, который необходимо сказать, перед ударными гласными можно поставить знак "+", чтобы показать на что делать ударение; who - это голос говорящего (женские голоса: oksana, alyss, jane, omazh;мужские голоса: ermil, zahar); attitude - настроение (neutral - нейтральное, стоит по умолчанию: evil - злое; good - доброе)
	say_evil(filename, text, who) - то же что и say, только сказать злым голосом
	say_good(filename, text, who) - то же что и say, только сказать добрым голосом
	change_speed(persent) - установить скорость речи, число от 10 до 300 (по сути это проценты, где нормальная, по умолчанию 100%, максимальная 300%, минимальная 10%).
voice oksana, alyss, jane, omazh
